# Generated by Django 4.2.7 on 2024-03-16 08:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BojUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boj_handle', models.TextField(max_length=256, verbose_name='BOJ 핸들')),
            ],
            options={
                'verbose_name': 'boj user',
                'verbose_name_plural': 'boj users',
                'db_table': 'boj_users',
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=256, verbose_name='문제 이름')),
                ('problem_number', models.IntegerField(verbose_name='문제 번호')),
                ('tier', models.IntegerField(verbose_name='문제 난이도')),
                ('solved_count', models.IntegerField(verbose_name='해결한 사람 수')),
                ('submission_count', models.IntegerField(verbose_name='제출 수')),
                ('is_solved', models.BooleanField(verbose_name='해결 여부')),
                ('is_already_solved', models.BooleanField(verbose_name='이미 해결한 문제인지 여부')),
                ('is_solved_by_hongik', models.BooleanField(verbose_name='홍익대학교 학생이 해결한 문제인지 여부')),
                ('is_solved_by_ehwa', models.BooleanField(verbose_name='이화여자대학교 학생이 해결한 문제인지 여부')),
                ('is_solved_by_sogang', models.BooleanField(verbose_name='서강대학교 학생이 해결한 문제인지 여부')),
                ('is_solved_bt_yonsei', models.BooleanField(verbose_name='연세대학교 학생이 해결한 문제인지 여부')),
                ('is_solved_by_sookmyeong', models.BooleanField(verbose_name='숙명여자대학교 학생이 해결한 문제인지 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성 시간')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정 시간')),
            ],
            options={
                'verbose_name': 'problem',
                'verbose_name_plural': 'problems',
                'db_table': 'problems',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=256, verbose_name='태그 이름')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Tagging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.TextField(max_length=256, verbose_name='태그 이름')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leaderboard.problem', verbose_name='문제')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leaderboard.tag', verbose_name='태그')),
            ],
            options={
                'verbose_name': 'tagging',
                'verbose_name_plural': 'taggings',
                'db_table': 'taggings',
            },
        ),
        migrations.CreateModel(
            name='ProblemSolver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boj_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leaderboard.bojuser', verbose_name='BOJ 사용자')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='leaderboard.problem', verbose_name='문제')),
            ],
            options={
                'verbose_name': 'problem solver',
                'verbose_name_plural': 'problem solvers',
                'db_table': 'problem_solvers',
            },
        ),
        migrations.AddField(
            model_name='problem',
            name='tags',
            field=models.ManyToManyField(through='leaderboard.Tagging', to='leaderboard.tag', verbose_name='태그'),
        ),
    ]
